package net.abp.navigation {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.EventDispatcher;	import flash.display.DisplayObject;	import Error;	public class Navigation {		private static const IS_CURRENT:String = "is current";		private var _buttons:Array;		private var _movieclips:Array;		private var _currentclip:DisplayObject;		private var _links:Array;		private var _limit:int;		private var _instance:String;		//EVENTS		private var _click:Function;		private var _over:Function;		private var _out:Function;		private var _current:Function;				public var config:Object;				public var clip:DisplayObject;		public var url:String;		public var id:int;		public var isCurrent:Boolean;		public var targetClip:DisplayObject;				public function Navigation(instanceName:String = "Navigation") {			_instance = instanceName;		}				//DISPLAY		public function set buttons(array):void {			_buttons=array;		}		public function set movieclips(array):void {			_movieclips=array;		}		public function set links(array):void {			_links=array;		}		public function set current(object):void {			_currentclip=object;		}				//EVENTS		public function set oncurrent(funct):void {			_current=funct;		}		public function set mouseclick(funct):void {			_click=funct;		}		public function set mouseover(funct):void {			_over=funct;		}		public function set mouseout(funct):void {			_out=funct;		}				public function setup():void {			_limit = _buttons.length;			for (var i:int=0; i<_limit; i++) {				_buttons[i].mouseChildren=false;				_buttons[i].buttonMode=true;				_buttons[i].isCurrent = (_buttons[i] == _currentclip)?(true):(false);				_buttons[i].id = i;				_buttons[i].url = (_links != null)?(_links[i]):(null);				_buttons[i].targetClip = (_movieclips != null)?(_movieclips[i]):(null)			}		}		public function test():void {			trace("TESTING: <"+_instance+">");			trace("**************************");			trace("CONFIG:");			trace("\t Disable Current: "+config.disableCurrent);			trace("**************************");			//ERROR			if (_movieclips!=null&&_buttons.length!=_movieclips.length) {				throw new Error("Length of <Navigation>.movieclips("+_movieclips.length+") not equal to length of <Navigation>.buttons("+_buttons.length+").");			}			if (_links!=null&&_buttons.length!=_links.length) {				throw new Error("Length of <Navigation>.links("+_links.length+") not equal to length of <Navigation>.buttons("+_buttons.length+").");			}						if(_currentclip!=null&&_current==null){				throw new Error("<Navigation>.oncurrent expected when <Navigation>.current is defined.");			}			//SETUP			setup();					//INFO			for (var i:int=0; i<_limit; i++) {				trace("child["+i+"]"+String((_buttons[i].isCurrent == true)?(" ** CURRENT **"):("")));				trace("\tbutton: "+String((_buttons!=null)?(_buttons[i].name):("undefined")));				trace("\t.targetClip: "+String((_movieclips!=null)?(_buttons[i].targetClip.name):("undefined")));				trace("\t.url: "+String((_links!=null)?(_buttons[i].url):("undefined")));				trace("**************************");			}		}				public function go():void {			setup();			for (var i:int=0; i<_limit; i++) {				var btn = _buttons[i];				if (_over != null) {					btn.addEventListener(MouseEvent.MOUSE_OVER, _over);				}				if (_out != null) {					btn.addEventListener(MouseEvent.MOUSE_OUT, _out);				}				if (_click != null) {					btn.addEventListener(MouseEvent.CLICK, _click);				}				if(btn.isCurrent){					btn.addEventListener(IS_CURRENT, _current);					btn.dispatchEvent(new Event(IS_CURRENT));					if(config.disableCurrent){						btn.removeEventListener(MouseEvent.MOUSE_OVER, _over);						btn.removeEventListener(MouseEvent.MOUSE_OUT, _out);						btn.removeEventListener(MouseEvent.CLICK, _click);						btn.buttonMode = false;					}				}			}		}	}}